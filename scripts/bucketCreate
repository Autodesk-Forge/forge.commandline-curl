#!/bin/bash

[[ -f ./_tools ]] && source ./_tools
[[ -f ./scripts/_tools ]] && source ./scripts/_tools
source $ROOT/scripts/_config

#	bucketCreate <Name> [<Type>]
#		- create a new bucket,
#		  default Type is transient, values can be
#		  transient/temporary/persistent

bucket=$(bucketName $1)
if [[ "$bucket" == "" ]]; then
	echo "Error: missing bucket name or invalid name!"
	exit
fi

bucketType=$2
if [[ "$bucketType" == "" ]]; then
	bucketType="transient"
fi

# Does it exist already? (see bucketCheck)
response=$(curl -H "Authorization: ${access_token}" -X GET ${APIHost}oss/v2/buckets/${bucket}/details -k)
#echo $response | jq .

key=$(echo $response | jq --raw-output .key)
if [ "$key" != "null" ]; then
	echo "Error - bucket already exists!"
	exit
fi
reason=$(echo $response | jq --raw-output .reason)
if [ "$reason" != "Bucket not found" ]; then
	echo "${reason}"
	exit
fi

response=$(curl --header "Content-Type: application/json" --header "Authorization: ${access_token}" \
	--data "{\"bucketKey\":\"${bucket}\",\"policy\":\"${bucketType}\"}" ${APIHost}oss/v2/buckets -k)
#echo $response | jq .

key=$(echo $response | jq --raw-output .key)
if [ "$key" == "null" ]; then
	reason=$(echo $response | jq --raw-output .reason)
	echo "Error - ${reason}"
	exit
fi
echo "bucket ${key} created"
echo $response > $ROOT/data/$key.bucket.json
echo $bucket > $ROOT/data/bucket
